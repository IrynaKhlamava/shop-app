services:
  auth-db:
    image: postgres:15
    container_name: auth-db
    restart: always
    environment:
      POSTGRES_DB: ${AUTH_DB_NAME}
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
    ports:
      - "${AUTH_DB_PORT_ON_HOST}:5432"
    networks:
      - backend
    volumes:
      - auth_pgdata:/var/lib/postgresql/data

  redis:
    image: redis
    container_name: redis-auth-service
    restart: always
    ports:
      - "${AUTH_REDIS_PORT}:6379"
    command: [ "redis-server", "--requirepass", "${AUTH_REDIS_PASSWORD}" ]
    volumes:
      - redis_data:/data
    networks:
      - backend

  auth-service:
    build: .
    container_name: auth-service
    depends_on:
      - auth-db
      - redis
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${AUTH_DB_HOST}:${AUTH_DB_PORT}/${AUTH_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${AUTH_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${AUTH_DB_PASSWORD}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
    ports:
      - "${AUTH_PORT}:8080"
    networks:
      - backend

networks:
  backend:

volumes:
  redis_data:
  auth_pgdata: